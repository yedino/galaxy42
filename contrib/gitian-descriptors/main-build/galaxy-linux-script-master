#!/bin/bash

project_name="galaxy42"
printf "\n\n=========================================================================\n\n"
printf "PROJECT $project_name - INTERNAL (in-Gitian) LINUX BUILD SCRIPT\n"

function fail() {
	printf "\nERROR: the script failed (see above messages).\n\n"
	exit 1
}


script="contrib/gitian-descriptors/main-build/galaxy-linux-script"


# --- options

option_do_it_32bit=0
option_do_it_64bit=0
option_skip_cd=0

while getopts ":h36C" opt; do
	case $opt in
		C)
			option_skip_cd=1
		;;
		3)
			option_do_it_32bit=1
			printf "THIS is not yet supported for this OS! Aborting.\n" # TODO !
			exit 1
		;;

		6)
			option_do_it_64bit=1
		;;
                h)
                cat <<EOF

This is the MASTER build script (that calls the other scripts).
To see more options you can directly call the other script, like:
$script -h

This MASTER script should be called with option:
-3 for 32bit build
-6 for 64bit build
-C skip the cd to directory that is expected inside Gitian. For fast tests outside of Gitian.

any other FURTHER options will be also passed to the other script ($script)



EOF
                                exit 0
                                ;;
#                        '?')
#                                printf "\n\nERROR: Unknown option, run with -h for help.\n"
#                                exit 1
#                                ;;
          esac
done

shift $((OPTIND-1)) # eat all the options paresed above

printf "\n%s\n" "option_do_it_32bit=$option_do_it_32bit"
printf "\n%s\n" "option_do_it_64bit=$option_do_it_64bit"
printf "\n%s\n" "options to be passed to the other script are:"
printf "%s\n" "$@"


if (( ! option_skip_cd )) ; then
	cd "$HOME/build/galaxy42" || fail "cd to home build (in MASTER script)"
fi

if (( option_do_it_32bit )) ; then
	export TARGET_ARCH="i686-w64-mingw32"
	printf "\n\n%s\n" "Will build for TARGET_ARCH=$TARGET_ARCH"
	"$script" "$@" || fail "Buil failed (for TARGET_ARCH=$TARGET_ARCH)"
fi

if (( option_do_it_64bit )) ; then
	export TARGET_ARCH="x86_64-w64-mingw32"
	printf "\n\n%s\n" "Will build for TARGET_ARCH=$TARGET_ARCH"
	"$script" "$@" || fail "Buil failed (for TARGET_ARCH=$TARGET_ARCH)"
fi


