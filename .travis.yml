# For creating tun
sudo: required

# Enable C++ support
language: cpp

os:
  - linux
dist: trusty

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
    packages:
      - gcc-5
      - g++-5
      - clang-3.7
      - libboost-system-dev
      - libboost-filesystem-dev
      - libboost-program-options-dev
      - libboost-locale-dev
      - libfftw3-dev
      - shellcheck

compiler:
  - gcc
  - clang

# add manually apt-key key for ppa:chris-lea becouse retrieving it from server occurs randomly some problems
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-key add "$TRAVIS_BUILD_DIR"/doc/pubkey/chris_lea_libsodium.pub ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository ppa:chris-lea/libsodium -y                      ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -q                                                  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libsodium-dev -y                                   ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install --user cpp-coveralls                                        ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update                                                           ; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      for pkg in llvm37 autoconf pkg-config cmake boost libsodium gettext shellcheck; do
        if brew list -1 | grep -q "^${pkg}\$"; then
          echo "Package '$pkg' is installed";
        else 
          brew install "$pkg"; 
        fi ; 
      done ; 
    fi

install:
  - echo $CXX   # for dbg
  - echo $CC
  - if [[ "$CC" == "gcc" ]]; then export CXX="g++-5" CC="gcc-5"  ; fi
  - if [[ "$CC" == "clang" ]]; then export CXX="clang++-3.7" CC="clang-3.7"  ; fi

env:
  global:
    - COVERAGE=0
    - EXTLEVEL=0
  matrix:
    # - EXTLEVEL=30   commented becauce of too big compilation matrix
    - EXTLEVEL=20
    - EXTLEVEL=10

matrix:
    fast_finish: true
    exclude:
      - os: linux
        compiler: clang
      - os: osx
        compiler: gcc

    include:
      - os: linux
        env: COVERAGE=1 EXTLEVEL=0
        compiler: gcc

      - os: linux
        env: EXTLEVEL=0
        compiler: clang

      - os: osx
        osx_image: xcode7.3
        env: EXTLEVEL=0
        compiler: clang

      - os: osx
        osx_image: xcode7.3
        env: EXTLEVEL=10
        compiler: clang

      - os: osx
        osx_image: xcode7.3
        env: EXTLEVEL=20
        compiler: clang

    allow_failures:
      - os: osx
      - env: EXTLEVEL=30
      - env: EXTLEVEL=20
      - env: EXTLEVEL=10

# Adding setcap for tunserver.elf etc.
before_script:
  - cd ${TRAVIS_BUILD_DIR} # back to main dir
  - cd share/script/install-as-root/ && sudo ./install -y

script:
  - cd ${TRAVIS_BUILD_DIR}
  - ./check
  - ./do --go

after_success:
  - ./test-release.elf    # run gtests
  - if [[ "$COVERAGE" == "1" ]]; then coveralls -e src/test -e build_extra -e depends --gcov-options '\-lp' --gcov 'gcov-5' ; fi

notifications:
  irc:
    on_success: change
    on_failure: change
    channels:
      - "icann.irc.meshnet.pl#antinet-dev"
    template:
      - "%{repository}#%{build_number} (%{branch} - %{commit} : %{author}): %{message} (%{build_url})"

  email: false
  #  to minimize spam
  #  on_success: change
  #  on_failure: always
  #recipients:
  #  - one@example.com
  #  - other@example.com

