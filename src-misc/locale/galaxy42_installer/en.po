# Galaxy42 installer
# Copyright (C) 2016
# This file is distributed at once at licences: under the same license as the Galaxy42 package,
# and as BSD 2-clause licence.
# Yedino <info@yedino.com>, 2016
#
msgid ""
msgstr ""
"Project-Id-Version: galaxy 42\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-06 18:01+0000\n"
"PO-Revision-Date: 2016-08-19 17:23+0000\n"
"Last-Translator:  <info@yedino.com>\n"
"Language-Team: Polish\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2);\n"

#, sh-format
msgid ""
"This tool will configure your computer for the SELECTED by you functions of "
"$programname."
msgstr ""

msgid ""
"This seems to be a text-mode GUI, you can use up/down arrows, SPACE to "
"select option, ENTER to finish."
msgstr ""

msgid "We recognize your system/platform as:"
msgstr ""

#, sh-format
msgid "Configure computer for $programname"
msgstr ""

msgid "Ok"
msgstr ""

msgid "Quit"
msgstr ""

#, sh-format
msgid "How do you want to use $programname:"
msgstr ""

msgid "menu_task_warn"
msgstr "Show warnings"

#, sh-format
msgid "menu_task_build"
msgstr "Build this program from source code"

#, sh-format
msgid "menu_task_touse"
msgstr "Use this program on this computer"

#, sh-format
msgid "menu_task_devel"
msgstr "Develop this program"

#, sh-format
msgid "menu_task_bgitian"
msgstr "Compile and sign/publish (e.g. Gitian)"

msgid "Done"
msgstr ""

#, sh-format
msgid "Finished installation of $programname."
msgstr "Finished installation of $programname."

#, sh-format
msgid "warn2_net"
msgstr ""
"WARNING: SPECIAL settings of networks - maybe names or functions of network "
"cards (e.g. eth0/br0/lxcbr0) will be changed."

msgid "warn2_net_title"
msgstr "WARNING (SPECIAL: networks)"

msgid "warning_build"
msgstr "* Installing tools to build a source code"

msgid "warning_devel"
msgstr ""
"* We're going to install some developer tools e.g. to simulate lot of "
"networks on this computer (network namespace)."

msgid "warning_bgitian"
msgstr ""
"* We're going to configure your computer to using Gitian (in virtualization "
"LXC). Warning, it can make some others network cards and change settings "
"actually using cards. For example other IP address from current main "
"Internet link (e.g. eth0) can be showed/moved like attached to other card "
"(that's how a 'bridge' works)"

#, sh-format
msgid "warning_SUMMARY"
msgstr "Please confirm undermentioned changes (they impact security)."

msgid "warning_SUMMARY_TITLE"
msgstr "Caution safety and summary"

msgid "warn_root"
msgstr "# We will need root (admin) rights during this installation."

msgid "warn_fw"
msgstr "# Please remember to install NOW a firewall!"

msgid "menu_task_verbose"
msgstr "(Show more details during installation)"

msgid "install_progress_title"
msgstr "Progress of installation"

#, sh-format
msgid "warning_touse $programname"
msgstr "* Configure computer for running here the program $programname"

msgid "status_done_step_BEFORE"
msgstr "Now we're doing:"

msgid "status_done_step_PRESSKEY"
msgstr "Please press ENTER to continue..."

msgid "error_init_platforminfo"
msgstr "No information about this platform/system"

#, sh-format
msgid "status_done_step $item"
msgstr "The step is done: '$item'."

#, sh-format
msgid "menu_main_title $programname:"
msgstr "Installer $programname"

msgid "menu_taskpack_normal_builduse"
msgstr "Simple: build this program to use it only here"

msgid "menu_taskpack_custom"
msgstr "Chose the options..."

msgid "menu_taskpack_quick_builduse"
msgstr "No confirmations (dangerous!) - build & use"

msgid "menu_taskpack_quick_devel"
msgstr "No confirmations (dangerous!) - for developer"

msgid "tasks_we_will_do"
msgstr "We're going to do:"

#, sh-format
msgid "this_script_uses_sudo_flag $sudo_flag"
msgstr ""
"Script isn't running like a root, but you put flagÂ $sudo_flag and we think "
"so sudo is ready and we're continuing"

#, sh-format
msgid "this_script_must_be_run_as_root_or $sudo_flag"
msgstr ""
"This script must be run as root, or else run it with flag $sudo_flag to use "
"sudo"

msgid "error_init_platforminfo_unknown"
msgstr "This platform/OS is unknown"

msgid "install_packages_title"
msgstr "Packages to install"

msgid "Install"
msgstr "Install"

#, sh-format
msgid "L_install_failed"
msgstr "Installation failed"

#, sh-format
msgid "L_install_nothing_to_do"
msgstr "Nothing to install now"

msgid "L_now_installing_gitian_lxc"
msgstr "Now we are installing LXC for Gitian"

#, sh-format
msgid "L_needrestart_summary_text"
msgstr "System restart might be needed for following reasons:"

msgid "L_needrestart_summary_title"
msgstr "Restart needed"

msgid "L_needrestart_LXC_maybe"
msgstr ""
"# Perhaps (but hopefully not) - LXC network (needed to use Gitian) should "
"work now, but in case of problems you might want to restart the system to be "
"sure."

msgid "L_program_is_pre_pre_alpha"
msgstr ""
"This program is not yet ready nor secure, do not use it in this version. "
"(Please use it only on a test virtual machine)."

#, sh-format
msgid ""
"Can not find script library $lib (dir_base_of_source=$dir_base_of_source)."
msgstr "Can not find script library $lib (in directory $dir_base_of_source)."

#, sh-format
msgid "We will install packages: $packages_str now (as root)"
msgstr "We will install packages: $packages_str now (as root)"

#, sh-format
msgid "L_install_packages_text $packages_str"
msgstr "We will install packages: $packages_str"

msgid "menu_taskpack_devel_builduse"
msgstr "Advanced: build program in Gitian / develop it"

msgid "install_progress_fix"
msgstr "Automated fix of a problem"

msgid "L_fix_cgroupfs_mount"
msgstr ""
"This system seems to not properly support cgroupfs. We will try to fix this. "
"(This is needed to use Gitian)."

msgid "L_fix_ubuntu_old_build"
msgstr ""
"This system (older version of Ubuntu) needs special settings for "
"compilation. We will try to fix this. (This is needed to compile native "
"programs on this machine)."

#, sh-format
msgid "L_what_now"
msgstr ""
"To normally compile the program nativly (and use it later) we recommend "
"command:\n"
"  ./do \n"
"And for Gitian build (for this or other system) we recommend:\n"
"  ./build-gitian\n"
"You can change install options by running ./install.sh. List of other "
"options you will see by running ./menu or by reading documentation."

#, sh-format
msgid "L_fix_uninstall_apt_cacher bad=$apt_cacher_bad good=$apt_cacher_good."
msgstr ""
"We must now uninstall you other apt cacher program: [$apt_cacher_bad], so "
"that we can instead install another one that we need: [$apt_cacher_good]."
