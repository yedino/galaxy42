#!/bin/bash -e

readonly galaxy42_dir="$HOME/build/galaxy42"
readonly WRAP_DIR="$HOME/wrapped"
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# copy dll's, tunserver.elf.exe etc to contrib/nsis-installer-windows/bin  x64 x86

function fail() {
	printf "\n\nError (in NSIS, $0) : %s\n\n" "$*"
	exit 1
}

printf "\n\n\nBuilding zlib (for NSIS)\n\n\n"

[[ -r "$galaxy42_dir" ]] || fail "Can not enter galaxy42_dir=[$galaxy42_dir]"

if (( 1 )) ; then # on/off main buld

# take the DLLs form system:

installer_bin_dir="$galaxy42_dir/contrib/nsis-installer-windows/bin/"
pushd "$installer_bin_dir" || fail "enter $installer_bin_dir"
	./download.sh
popd || fail "popd $installer_bin_dir dir"

# build zlib
rm -rf zlib
git clone https://github.com/madler/zlib || fail "git clone"
pushd zlib || fail
	git checkout v1.2.11 || fail "git checkout"

	confirm_gitver=$(git log --format='%H' -1)
	expected_gitrev='cacf7f1d4e3d44d871b605da3b647f07d718623f'
	[[ "$confirm_gitver" == "$expected_gitrev" ]] || {
		fail "Git verification of hash: hash is $confirm_gitver instead of expected $expected_gitrev"
	}

	git reset --hard v1.2.8 || fail
	git clean -xdf || fail
	sed -e s@"PREFIX ="@"PREFIX = "$WRAP_DIR"/i686-w64-mingw32-"@ -i win32/Makefile.gcc || fail
	mv win32/Makefile.gcc Makefile || fail
	make || fail "zlib make"
popd

printf "\n\n\nBuilding NSIS itself\n\n\n"

# build nsis
rm -rf nsis
git clone https://github.com/kichik/nsis || fail "clone NSIS"
pushd nsis || fail
	git checkout 25d5c2a6fd7fd0faa6a354cda4ca1a103ee184b1 || fail "Checkout" # version with i686-w64-mingw32, waiting for v30 release

	export PATH="${HOME}/wrapped:${PATH}"

	# for scons nsis_version - work because we only need day precision
	# ** more than 24h build of nsis could ruin deteministic
	export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1
	export FAKETIME="2016-08-01 00:00:00"

	sed -i '46a\    '$WRAP_DIR'/i686-w64-mingw32-' SCons/Tools/crossmingw.py # add our wrapped i686-w64-mingw32 at the top of compiler available list

	scons UNICODE=yes ZLIB_W32=../zlib PREFIX=install_dir install || fail "Scons failed (of zlib, for NSIS)"
	scons UNICODE=yes SKIPUTILS=all SKIPMISC=all NSIS_CONFIG_CONST_DATA_PATH=no PREFIX=install_dir install || fail "Scons failed (main NSIS)"
	cp ./Contrib/nsDialogs/nsDialogs.nsh Include/ || fail
	cp ./build/urelease/UIs/modern.exe Contrib/UIs/ || fail
	mkdir -p Plugins/x86-ansi || fail
	mkdir -p Plugins/x86-unicode || fail

	cp `find -name *.dll | grep install_dir/Plugins/x86-ansi` Plugins/x86-ansi
	cp `find -name *.dll | grep install_dir/Plugins/x86-unicode` Plugins/x86-unicode

	cp -r install_dir/Stubs/ . || fail
	cp "$galaxy42_dir/contrib/nsis-installer-windows/plugins/NSIS_Service_Lib/servicelib.nsh" Include/ || fail

popd

fi

# use the nsis tool - actually build installer of our project!
pushd nsis/install_dir || fail

REFERENCE_DATETIME="2016-08-01 00:00:00"

printf "\n%s\n" "WRAPPING makensis localy in $(pwd)"

	echo '#!/bin/bash' > "makensis_wrapped"
	echo "REAL=$(pwd)/makensis" >> "makensis_wrapped"
	echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> "makensis_wrapped"
	echo "export FAKETIME=\"$REFERENCE_DATETIME\"" >> "makensis_wrapped"
	echo "\$REAL \$@" >> "makensis_wrapped"
	chmod +x "makensis_wrapped"

	printf "\n\nPreparing to makensis in PWD=$PWD\n\n"
	cp "$galaxy42_dir/contrib/nsis-installer-windows/plugins/NSIS_Service_Lib/servicelib.nsh" ./ || fail "copy nsis plugin here for use"
	printf "\n\nRunning makensis in PWD=$PWD\n\n"
	set -x

	# generate file list that will be pushed to installer.nsi file
	"${SCRIPT_DIR}/bin/generate_nsis_filelist.sh" > tmp.out
	sed -i '/START_FILES/r tmp.out' "${SCRIPT_DIR}/installer.nsi"
	rm tmp.out

	# download openvpn installer
	URL="https://swupdate.openvpn.org/community/releases/openvpn-install-2.4.4-I601.exe"
	wget "$URL" -P "${SCRIPT_DIR}" --no-check-certificate || fail "Can not download $URL"
	echo "2ba52477b898663b3d88594baab145725fb327644a5a95317a176ba2c4a0fcf946c082eaaff094afcb9bc049a8b4d7ed8a9317f79d5bf04a81778c55a5adde39 ${SCRIPT_DIR}/openvpn-install-2.4.4-I601.exe" | sha512sum -c || fail "The checksum was unexpected! This can be download problem, or else some hacking attempt, please verify this!"
	mv "${SCRIPT_DIR}/openvpn-install-2.4.4-I601.exe" /home/ubuntu/build/galaxy42/contrib/nsis-installer-windows/bin/noarch/ || fail "moving openvpn-install-2.4.4-I601.exe"

	# use wrapped
	./makensis_wrapped "$galaxy42_dir/contrib/nsis-installer-windows/installer.nsi" || fail "Makensis of our project failed"
	set +x
popd

# copy installer to gitian out dir (where can be accessed by host)
cp "$galaxy42_dir/contrib/nsis-installer-windows/galaxy42_installer.exe" "/home/ubuntu/out" || fail "copy windows installer to 'out'"
