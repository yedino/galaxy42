#!/bin/bash
# read below usage() for LICENCE and help on this tool.

function usage() {

	cat <<EOF

This code (in this file) is on BSD 2-clause license, (c) Copyrighted 2016 TiguSoft.pl

This script will generate scripts that set up LXC networking,
and will connect them to be auto-started.

It is designed to:
- allow running it few times without trouble/duplication of things (unless you need to manually delete some
very old stuff created by very old versions of this code)
- instantly create the desite effects without need for restart (if possible, not guaranteed)

Should work on many Linuxes, especially Debian family (and likelly Redhat family and all others too)

usage:
$0 [--force|--normal] [--all-if|--some-if] [space_separated_interface_list]
e.g.:
$0 --normal --all-if
$0 --normal --some-if "eth0 eth1 eth2 eth3 eth4 wlan0 wlan1 wlan2 usb0 usb1 usb2"

It should set up computer to have rules like after running for example:
	 iptables -t nat -D POSTROUTING -j lxc-nat-v1
	 iptables -t nat -F lxc-nat-v1
	 iptables -t nat -X lxc-nat-v1
	 iptables -t nat -N lxc-nat-v1
	 iptables -t nat -I lxc-nat-v1 -o eth1 -j MASQUERADE
	 iptables -t nat -I lxc-nat-v1 -o eth2 -j MASQUERADE
	 iptables -t nat -I lxc-nat-v1 -o eth3 -j MASQUERADE
	 iptables -t nat -I POSTROUTING -j lxc-nat-v1

EOF

}

usage

exit 1

marker='#marker_gitian_lxc_is_added_here' # to find if initfile already has the hook calling our main autostart script
initfile='/etc/rc.local' # put here our autostart script

do_install_main=1 # do we want to install the call to mainscript

opt_force_s="$1"
opt_all_if="$2"
lxc_iflist="$3"

if [ $(id -u) != 0 ]
then
	echo "You must be root"
	exit 1
fi

grep "$marker" "$initfile" && {
	printf "\nIt seems lxc setup (at least the main hook) is already installed into file [$initfile].\n\n"
	if [[ '$1' != '--force' ]] ; then
		printf "Will NOT install lxc setup again then.\n"
		do_install_main=0
	fi
}

ourscript="/etc/rc.local.lxcnet-gitian" # this script is generated here.

if (( do_install_main )) ; then
	name="/etc/rc.local"
	name_bup="/etc/rc.local.bup"

	# backup rc.local
	echo "Making backup into $name_bup"
	cp "$name" "$name_bup" # make a backup

	# edit rc.local to call $ourscript
	sed -i '/exit 0/d' /etc/rc.local # there is usually an silly exit on top there, we will remove it
	echo "$marker" >> "$name"
	echo "# start of gitian lxc (call only)" >> "$name"
	echo "sh $ourscript" >> "$name"
	echo "# end of gitian lxc" >> "$name"

	# generate $outscript
	echo "$marker" >> "$ourscript"
	echo "# start of gitian lxc (script itself)" >> "$ourscript"
	echo 'brctl addbr br0' >> "$ourscript"
	echo 'ifconfig br0 10.0.3.2/24 up' >> "$ourscript"
	echo "lxc_iflist='$lxc_iflist'" >> "$ourscript" # <--- here the script will have literal text like =eth0 eth1 eth2 ...
	if [[ "$opt_all_if" == "--all-if" ]] ; then
		echo "lxc_all=1" >> "$outscript"
	else
		echo "lxc_all=0" >> "$outscript"
	fi
	# echo '' >> "$ourscript"
	echo 'if (( lxc_all )) ; then ' >> "$ourscript"
	echo '  for ifname in $lxc_iflist ; do ' >> "$ourscript"
	echo '    iptables -t nat -A POSTROUTING -o $ifname -j MASQUERADE' >> "$ourscript"
	echo '  done' >> "$ourscript"
	echo 'else' >> "$ourscript"
	echo '  iptables -t nat -A POSTROUTING -j MASQUERADE' >> "$ourscript"
	echo 'fi' >> "$ourscript"
	echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> "$ourscript"
	echo "# end of gitian lxc" >> "$ourscript"
	echo '' >> "$ourscript"

fi

printf "\nInstalling sudoers settings\n"
echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-start" > /etc/sudoers.d/gitian-lxc    # new file
echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-execute" >> /etc/sudoers.d/gitian-lxc

# ln -s /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/xenial

printf "All done (in $0)\n\n"

